syntax = "proto3";

package StealthIM.FileAPI;

option go_package = "StealthIM.FileAPI";
option java_package = "com.StealthIM.Proto.FileAPI";
option java_outer_classname = "FileAPI";
option csharp_namespace = "StealthIM.Proto.FileAPI";
option java_multiple_files = true;

service StealthIMFileAPI {
  rpc Ping(PingRequest) returns (Pong);
  rpc Reload(ReloadRequest) returns (ReloadResponse);
  rpc Upload(stream UploadRequest) returns (stream UploadResponse);
  rpc Download(DownloadRequest) returns (stream DownloadResponse);
  rpc Usage(UsageRequest) returns (UsageResponse);
  rpc GetFileInfo(GetFileInfoRequest) returns (GetFileInfoResponse);
  rpc Command(CommandRequest) returns (CommandResponse); // Only for debug
}

import "google/protobuf/descriptor.proto";
enum ProxyType {
  PROXY_REWRITE_UID = 0;
}
extend google.protobuf.FieldOptions { optional ProxyType proxy = 50000; }

message PingRequest {}
message Pong {}

message Result {
  int32 code = 1;
  string msg = 2;
}

message Upload_FileBlock {
  int32 blockid = 1;
  bytes file = 2;
}
message Upload_FileMetaData {
  int32 totalsize = 1;
  int32 upload_uid = 2 [ (proxy) = PROXY_REWRITE_UID ];
  string hash = 3;
}
message UploadRequest {
  oneof data {
    Upload_FileMetaData metadata = 1;
    Upload_FileBlock file = 2;
  }
}
message Upload_MetaResponse {
  int32 blocksize = 1;
  string hash = 2;
}
message Upload_BlockResponse { int32 blockid = 1; }
message Upload_CompleteResponse { string hash = 1; }
message UploadResponse {
  Result result = 1;
  oneof data {
    Upload_MetaResponse meta = 2;
    Upload_BlockResponse block = 3;
    Upload_CompleteResponse complete = 4;
  }
}

message Download_FileBlock {
  int32 blockid = 1;
  bytes file = 2;
}
message DownloadRequest {
  string hash = 1;
  int32 start = 2;
  int32 end = 3;
}
message DownloadResponse {
  oneof data {
    Result result = 1;
    Download_FileBlock file = 2;
  }
}

message UsageRequest {}
message UsageNode {
  int32 id = 1;
  bool online = 2;
  int32 usage = 3;
  int32 total = 4;
}
message UsageResponse {
  Result result = 1;
  repeated UsageNode nodes = 2;
}

message ReloadRequest {}
message ReloadResponse { Result result = 1; }

message GetBlockSizeRequest {}
message GetBlockSizeResponse { int32 blocksize = 1; }

message GetFileInfoRequest { string hash = 1; }
message GetFileInfoResponse {
  Result result = 1;
  int32 size = 2;
}

message StorageNodes { repeated int32 nodeid = 1; }

message BlockStorage {
  string filename = 3;
  int32 filesize = 4;
  oneof type {
    StorageNodes nodes = 1;
    bytes data = 2;
  }
}

// Only for debug
message CommandRequest { string command = 1; }
// Only for debug
message CommandResponse { string result = 1; }
